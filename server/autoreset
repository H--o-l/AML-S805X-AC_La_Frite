#!/usr/bin/env python3

# Script from github.com/openenergymonitor/avrdude-rpi/tree/5c129e2, adapted
# for my needs (i.e. use of ioctl instead of the old sysfs).
# Dep `sudo apt install python3-libgpiod`

import gpiod
import sys
import os
import re
import time
import fcntl

chip = gpiod.Chip('gpiochip0')
# chip = gpiod.Chip('gpiochip1')

lines = chip.get_lines([2])
# lines = chip.get_lines([84])
lines.request(consumer='dtr_for_arduino', type=gpiod.LINE_REQ_DIR_OUT,
              default_vals=[0])

fd = sys.stdin.fileno()
fl = fcntl.fcntl(fd, fcntl.F_GETFL)
fcntl.fcntl(fd, fcntl.F_SETFL, fl | os.O_NONBLOCK)

dtr = re.compile('.+TIOCM_DTR.+')
start = time.time()


def reset():
    lines.set_values([1])
    time.sleep(0.25)
    lines.set_values([0])


def process():
    while True:
        try:
            duration = time.time() - start
            input = sys.stdin.readline().strip()
            if input is None:  # == "":
                input = sys.stdin.readline().strip()
            if dtr.match(input):
                reset()
                return
            elif duration > 5000:
                return
        except Exception as e:
            if hasattr(e, 'errno'):
                if e.errno != 11:  # Ignore resource unavailable
                    raise
            else:
                raise


process()
print("done with autoreset")
